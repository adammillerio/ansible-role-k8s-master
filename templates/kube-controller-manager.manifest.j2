apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    k8s-app: kube-controller-manager
  name: kube-controller-manager
  namespace: kube-system
spec:
  priorityClassName: system-node-critical
  containers:
  - name: kube-controller-manager
    image: gcr.io/google_containers/kube-controller-manager:v{{ k8s_version }}
    command:
    - /bin/sh
    - -c
    - /usr/local/bin/kube-controller-manager
      --address=0.0.0.0
      --allocate-node-cidrs=true
      --cluster-cidr={{ k8s_cni_node_cidr }}
      --cluster-name=kubernetes
      --cluster-signing-cert-file=/var/lib/kubernetes/ca.pem
      --cluster-signing-key-file=/var/lib/kubernetes/ca-key.pem
      --leader-elect=true
      --master=http://127.0.0.1:8080
      --root-ca-file=/var/lib/kubernetes/ca.pem
      --service-account-private-key-file=/var/lib/kubernetes/ca-key.pem
      --service-cluster-ip-range={{ k8s_cni_service_cidr }}
      --v=2 2>&1 | /bin/tee -a /var/log/kube-controller-manager.log
    livenessProbe:
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10252
      initialDelaySeconds: 15
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 100m
    volumeMounts:
    - mountPath: /var/lib/kubernetes
      name: var-lib-kubernetes
    - mountPath: /var/log
      name: var-log
  hostNetwork: true
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  volumes:
  - hostPath:
      path: /var/lib/kubernetes
    name: var-lib-kubernetes
  - hostPath:
      path: /var/log
    name: var-log
status: {}
