#jinja2:lstrip_blocks: True
{% if system_interface == "default" %}
  {% set bind_ip = hostvars[inventory_hostname]['ansible_default_ipv4']['address'] %}
{% else %}
  {% set bind_ip = hostvars[inventory_hostname]['ansible_' + system_interface]['ipv4']['address'] %}
{% endif %}
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    k8s-app: kube-apiserver
  name: kube-apiserver
  namespace: kube-system
spec:
  priorityClassName: system-node-critical
  containers:
  - name: kube-apiserver
    image: gcr.io/google_containers/kube-apiserver:v{{ k8s_version }}
    command:
    - /bin/sh
    - -c
    - /usr/local/bin/kube-apiserver
      --admission-control=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
      --advertise-address={{ bind_ip }}
      --allow-privileged=true
      --apiserver-count={{ k8s_apiserver_count }}
      --audit-log-maxage=30
      --audit-log-maxbackup=3
      --audit-log-maxsize=100
      --audit-log-path=/var/log/audit.log
      --authorization-mode=Node,RBAC
      --bind-address=0.0.0.0
      --client-ca-file=/var/lib/kubernetes/ca.pem
      --enable-swagger-ui=true
      --etcd-cafile=/var/lib/kubernetes/ca.pem
      --etcd-certfile=/var/lib/kubernetes/kubernetes.pem
      --etcd-keyfile=/var/lib/kubernetes/kubernetes-key.pem
      --etcd-servers=https://{{ bind_ip }}:2379
      --event-ttl=1h
      --experimental-encryption-provider-config=/var/lib/kubernetes/encryption-config.yaml
      --insecure-bind-address=127.0.0.1
      --kubelet-certificate-authority=/var/lib/kubernetes/ca.pem
      --kubelet-client-certificate=/var/lib/kubernetes/kubernetes.pem
      --kubelet-client-key=/var/lib/kubernetes/kubernetes-key.pem
      --kubelet-https=true
      --kubelet-preferred-address-types=InternalIP,Hostname,ExternalIP
      --runtime-config=api/all
      --service-account-key-file=/var/lib/kubernetes/ca-key.pem
      --service-cluster-ip-range={{ k8s_cni_service_cidr }}
      --service-node-port-range={{ k8s_cni_service_ports }}
      --tls-cert-file=/var/lib/kubernetes/kubernetes.pem
      --tls-private-key-file=/var/lib/kubernetes/kubernetes-key.pem
      {% if k8s_oidc_enable %}
      --oidc-client-id={{ k8s_oidc_client_id }}
      --oidc-issuer-url={{ k8s_oidc_issuer_url }}
      --oidc-username-claim={{ k8s_oidc_username_claim }}
      {% endif %}
      --v=2 | /bin/tee -a /var/log/kube-apiserver.log
    livenessProbe: 
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 8080
      initialDelaySeconds: 15
      timeoutSeconds: 15
    ports:
    - containerPort: 443
      hostPort: 443
      name: https
    - containerPort: 8080
      hostPort: 8080
      name: local
    resources:
      requests:
        cpu: 150m
    volumeMounts:
    - mountPath: /var/log
      name: var-log
    - mountPath: /var/lib/kubernetes
      name: var-lib-kubernetes
    - mountPath: /etc/ssl
      name: etc-ssl
      readOnly: true
    - mountPath: /usr/lib/ssl
      name: usr-lib-ssl
      readOnly: true
  hostNetwork: true
  tolerations:
  - key: CriticalAddonsOnly
    operator: Exists
  volumes:
  - hostPath:
      path: /var/log
    name: var-log
  - hostPath:
      path: /var/lib/kubernetes
    name: var-lib-kubernetes
  - hostPath:
      path: /etc/ssl
    name: etc-ssl
  - hostPath:
      path: /usr/lib/ssl
    name: usr-lib-ssl
status: {}
